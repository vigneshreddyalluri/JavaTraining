import java.util.Scanner;

public class Teen {

public static void main(String[] args) {

Scanner s = new Scanner(System.in);

int a = s.nextInt();
int b = s.nextInt();


loneTeen3(a, b);

}

public static boolean isTeen(int num) {
return num>= 13 && num <= 19;
}

// method 1
public static void loneTeen(int a, int b) {

if( (isTeen(a) && isTeen(b)) || (!isTeen(a) && !isTeen(b)) ) {
System.out.println("False");
} else if ( isTeen(a) || isTeen(b)) {
System.out.println("True");
} else
System.out.println("False");
}


// method 2
public static void loneTeen2(int a, int b) {

if( (isTeen(a) && !isTeen(b)) || (!isTeen(a) && isTeen(b)) )
System.out.println("True");
else
System.out.println("False");
}


// method 3
// ^ XOR operator
public static void loneTeen3(int a, int b) {
System.out.println( (isTeen(a) ^ isTeen(b)) );
}

}


--------------------------------------------------------------------------------------------------------


1. Imagine a tollbooth at a bridge. Cars passing by the bridge are expected to pay a 50 paise toll. Mostly they do, but sometimes a car goes by without paying.
The tollbooth keeps track of the number of cars that have gone by, and of the total amount of money collected.
Write a program to allow the user to press the key 1 to count a paying car, and 2 to count a nonpaying car. Pressing any other key should cause the program to print out the total cars and total cash and then exit.

Output format:
The output consists of four lines. The first line of the output contains an integer which corresponds to the total number of cars and the the second line of the output contains an integer which corresponds to total number of cars who paid , the third line of the output contains an integer which corresponds to total number of cars who have not paid, the fourth line contains an integer which corresponds to the total amount of money collected in paise.

Sample Input:
1
1
2
1
2
1
2
1
1
1
5

Sample Output:
10
7
3
350


2. A 3-digit number is said to be a Lucky number if the sum of the first digit and third digit in the number is equal to the second digit in the number.

Problem Statement:
Write a Java program to find whether a given number is a Lucky Number or not.

Input Format :

Input consists of a single integer followed by a newline.

Output format:

If the input is not a 3-digit number, the output must be 'Invalid Input' followed by a newline. If the input is a Lucky number, the output must be 'Lucky Number' followed by a newline. If the input is not a Lucky number, the output must be 'Not A Lucky Number' followed by a newline.

Sample Input 1:
165

Sample Output 1:
Lucky Number

Sample Input 2:
2345

Sample Output 2:
Invalid Input

Sample Input 3:
232

Sample Output 3:
Not An Lucky Number



3. Write A Program to accept two 3X3 matrices and find their product. Also check whether the resultant matrix is a Sparse Matrix.
A Matrix is known to be a Sparse Matrix if most of the elements of the matrix are 0 (i.e. the number of non zero elements is less than the number of zeros).

E.g. 0 2 4
1 0 0
0 5 0
Is a Sparse Matrix

Input Specification:
Input should consist of two 3X3 matrices. Input should be in the same way as shown. Each element should be in different lines and the input should be row wise (i.e. insert the 1st row elements and then the 2nd row elements and then the 3rd row elements).

Output Specification:

If the resultant matrix (product of the two matrices) is a Sparse matrix then the output should be 'Sparse Matrix'. Otherwise the output should be 'Not a Sparse Matrix'.

E.g. 1 0 1 0 -1 0 0 0 1
0 0 3 X 5 0 1 = 0 3 3
2 0 2 0 1 1 0 0 2


Input:
1
0
1
0
0
3
2
0
2
0
-1
0
5
0
2
0
1
1
Output:
Sparse Matrix

Input:
3
6
5
2
9
1
4
3
1
7
0
3
0
4
4
2
1
6

Output:
Not a Sparse Matrix


4. WAP to accept an integer array and print all the distinct elements in the array along with the frequency of them.
E.g. [1,3,5,2,7,2,2,1,5,3,5,6]
1 2 ( 1 has a frequency of 2 as it is occurring 2 times in the list )
2 3 ( 2 has a frequency of 3 as it is occurring 3 times in the list )
3 2
5 3
6 1
7 1

Input Specification :

Input should consist of an integer specifying n (the length of the array) and the elements of the array.

Output Specification:

It should print each distinct elements of the array followed by the frequency of that element as shown in the Output in the next line. Each distinct element along with the frequency should be in different lines.

Input:
5
8
4
6
4
6

Output:
8
1
4
2
6
2


5 The game of bus-bus is played by a set of people, who form a circle. One of the persons in the circle has to say 'one', the next person should say 'two' and so on. Whenever a person gets a number, which is either divisible by seven or ends with seven, he/she should say 'Bus' instead of the number. If the number in turn is both visible by seven and ends with a seven, then 'BusBus' should be uttered. Any one who violates the rule is taken out of the circle and the game continues with the remaining persons. The last one remaining is the winner of the game.

Write a program to simulate this game. Input to your program is n (10 <= n <= 100) upto which the above rule should be followed.

Sample input
20

Sample output
1
2
3
4
5
6
BusBus
8
9
10
11
12
13
Bus
15
16
Bus
18
19
20





1. create student class with properties

ID
Name
Age
Marks

2. Create ArrayList
3. Create 5 Student objects ands tore then in arrylist.

4. create a stream from student list

5. print the students whose age is 18 and marks less than 40

Print all those students.